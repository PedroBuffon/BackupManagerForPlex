# Plex Backup Manager - CI/CD Pipeline
# This workflow builds and tests the Plex Backup Manager Windows Forms application
# Built on .NET 9.0 with Windows Forms support

name: Create Plex Backup Manager Build Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: PlexBackup.sln
      Project_Path: PlexBackup.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install .NET 9.0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore $env:Solution_Name

    # Build the application
    - name: Build
      run: dotnet build $env:Solution_Name --configuration ${{ matrix.configuration }} --no-restore

    # Test the application (if tests exist)
    - name: Test
      run: dotnet test $env:Solution_Name --configuration ${{ matrix.configuration }} --no-build --verbosity normal
      continue-on-error: true

    # Publish the application
    - name: Publish
      run: dotnet publish $env:Project_Path --configuration ${{ matrix.configuration }} --output ./publish --no-build

    # Copy additional files
    - name: Copy configuration files
      run: |
        Copy-Item "config.json.example" "./publish/" -ErrorAction SilentlyContinue
        Copy-Item "README.md" "./publish/" -ErrorAction SilentlyContinue

    # Upload build artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: PlexBackup-${{ matrix.configuration }}
        path: ./publish

  # Create release on main branch push (Release configuration only)
  release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - name: Download Release artifacts
      uses: actions/download-artifact@v4
      with:
        name: PlexBackup-Release
        path: ./release

    - name: Create ZIP package
      id: package
      run: |
        $version = "v$(Get-Date -Format 'yyyy.MM.dd.HHmm')"
        Compress-Archive -Path "./release/*" -DestinationPath "PlexBackup.zip"
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "package_name=PlexBackup.zip" >> $env:GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref }}
        body: |

          ### Features:
          - Added rollback functionality when backup fails
          - Improved error handling and logging
          
          ### Installation:
          1. Download the ZIP file
          2. Extract to desired location
          3. Run PlexBackup.exe
          
          ### Requirements:
          - Windows OS
          - .NET 9.0 Runtime
        files: ${{ steps.package.outputs.package_name }}
        draft: false
        prerelease: false
